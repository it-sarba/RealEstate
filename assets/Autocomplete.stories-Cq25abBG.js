import{r as n,e as r}from"./iframe-BgPDq8p8.js";import{P as i}from"./index-CPaJQx2l.js";import{H as O}from"./index-De_36p6w.js";import"./iconBase-JlL7C29_.js";const p=({options:a,onSelect:u,placeholder:m})=>{const[l,y]=n.useState(""),[c,S]=n.useState([]),[d,f]=n.useState(-1),[h,o]=n.useState(!1),g=n.useRef(null);n.useEffect(()=>{if(l){const e=a.filter(t=>t.toLowerCase().includes(l.toLowerCase()));S(e),o(!0)}else S([]),o(!1)},[l,a]),n.useEffect(()=>{const e=t=>{g.current&&!g.current.contains(t.target)&&o(!1)};return document.addEventListener("mousedown",e),()=>document.removeEventListener("mousedown",e)},[]);const w=e=>{e.key==="ArrowDown"?f(t=>t<c.length-1?t+1:t):e.key==="ArrowUp"?f(t=>t>0?t-1:-1):e.key==="Enter"&&d>=0&&E(c[d])},E=e=>{y(e),u(e),o(!1),f(-1)};return r.createElement("div",{className:"autocomplete-wrapper",ref:g},r.createElement("div",{className:"autocomplete-input-wrapper"},r.createElement(O,{className:"autocomplete-icon"}),r.createElement("input",{type:"text",className:"autocomplete-input",placeholder:m,value:l,onChange:e=>y(e.target.value),onKeyDown:w,onFocus:()=>o(!0)})),h&&c.length>0&&r.createElement("ul",{className:"autocomplete-list"},c.map((e,t)=>r.createElement("li",{key:e,className:`autocomplete-item ${t===d?"active":""}`,onClick:()=>E(e)},e))))};p.propTypes={options:i.arrayOf(i.string).isRequired,onSelect:i.func.isRequired,placeholder:i.string};p.__docgenInfo={description:"",methods:[],displayName:"Autocomplete",props:{options:{description:"",type:{name:"arrayOf",value:{name:"string"}},required:!0},onSelect:{description:"",type:{name:"func"},required:!0},placeholder:{description:"",type:{name:"string"},required:!1}}};const{fn:_}=__STORYBOOK_MODULE_TEST__,C={title:"Components/Autocomplete",component:p,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{backgroundColor:{control:"color"}},args:{onClick:_()}},s=()=>{const[a,u]=n.useState(""),m=["Apple","Banana","Orange","Mango","Grapes","Pineapple","Papaya","Strawberry","Blueberry","Watermelon"];return r.createElement("div",null,r.createElement(p,{options:m,onSelect:u,placeholder:"Search for fruits..."}),r.createElement("p",{style:{marginTop:"10px"}},"Selected: ",r.createElement("strong",null,a)))};s.__docgenInfo={description:"",methods:[],displayName:"Default"};s.parameters={...s.parameters,docs:{...s.parameters?.docs,source:{originalSource:`() => {
  const [selected, setSelected] = useState("");
  const fruits = ["Apple", "Banana", "Orange", "Mango", "Grapes", "Pineapple", "Papaya", "Strawberry", "Blueberry", "Watermelon"];
  return <div>\r
      <Autocomplete options={fruits} onSelect={setSelected} placeholder="Search for fruits..." />\r
      <p style={{
      marginTop: "10px"
    }}>\r
        Selected: <strong>{selected}</strong>\r
      </p>\r
    </div>;
}`,...s.parameters?.docs?.source}}};const N=["Default"];export{s as Default,N as __namedExportsOrder,C as default};
