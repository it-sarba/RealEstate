import{r as i,e}from"./iframe-BgPDq8p8.js";const l=({isOpen:a,onClose:t,title:s="Dialog Title",description:r="",confirmText:c="Confirm",cancelText:d="Cancel",onConfirm:u})=>(i.useEffect(()=>{const o=m=>{m.key==="Escape"&&t()};return a&&document.addEventListener("keydown",o),()=>{document.removeEventListener("keydown",o)}},[a,t]),a?e.createElement("div",{className:"dialog-overlay",onClick:t},e.createElement("div",{className:"dialog-box",role:"alertdialog","aria-modal":"true","aria-labelledby":"dialog-title","aria-describedby":"dialog-description",onClick:o=>o.stopPropagation()},e.createElement("h3",{id:"dialog-title",className:"dialog-title"},s),r&&e.createElement("p",{id:"dialog-description",className:"dialog-description"},r),e.createElement("div",{className:"dialog-actions"},e.createElement("button",{className:"dialog-btn cancel",onClick:t},d),e.createElement("button",{className:"dialog-btn confirm",onClick:u},c)))):null);l.__docgenInfo={description:"",methods:[],displayName:"Dialog",props:{title:{defaultValue:{value:'"Dialog Title"',computed:!1},required:!1},description:{defaultValue:{value:'""',computed:!1},required:!1},confirmText:{defaultValue:{value:'"Confirm"',computed:!1},required:!1},cancelText:{defaultValue:{value:'"Cancel"',computed:!1},required:!1}}};const{fn:p}=__STORYBOOK_MODULE_TEST__,g={title:"Components/Dialog",component:l,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{backgroundColor:{control:"color"}},args:{onClick:p()}},n=()=>{const[a,t]=i.useState(!1);return e.createElement(e.Fragment,null,e.createElement("button",{onClick:()=>t(!0)},"Open Dialog"),e.createElement(l,{isOpen:a,onClose:()=>t(!1),onConfirm:()=>{alert("Confirmed!"),t(!1)},title:"Are you sure?",description:"This action cannot be undone.",confirmText:"Yes, continue",cancelText:"Cancel"}))};n.__docgenInfo={description:"",methods:[],displayName:"Default"};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:`() => {
  const [open, setOpen] = useState(false);
  return <>\r
      <button onClick={() => setOpen(true)}>Open Dialog</button>\r
      <Dialog isOpen={open} onClose={() => setOpen(false)} onConfirm={() => {
      alert("Confirmed!");
      setOpen(false);
    }} title="Are you sure?" description="This action cannot be undone." confirmText="Yes, continue" cancelText="Cancel" />\r
    </>;
}`,...n.parameters?.docs?.source}}};const E=["Default"];export{n as Default,E as __namedExportsOrder,g as default};
