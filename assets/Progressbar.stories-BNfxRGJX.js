import{e,r as m}from"./iframe-BgPDq8p8.js";const r=({value:c=0,max:u=100,label:l,showPercentage:n=!0,color:d="primary"})=>{const i=Math.min(c/u*100,100);return e.createElement("div",{className:"progress-container"},l&&e.createElement("span",{className:"progress-label"},l),e.createElement("div",{className:"progress-track"},e.createElement("div",{className:`progress-fill progress-${d}`,style:{width:`${i}%`}})),n&&e.createElement("span",{className:"progress-percentage"},Math.round(i),"%"))};r.__docgenInfo={description:"",methods:[],displayName:"Progressbar",props:{value:{defaultValue:{value:"0",computed:!1},required:!1},max:{defaultValue:{value:"100",computed:!1},required:!1},showPercentage:{defaultValue:{value:"true",computed:!1},required:!1},color:{defaultValue:{value:'"primary"',computed:!1},required:!1}}};const{fn:p}=__STORYBOOK_MODULE_TEST__,v={title:"Components/Progressbar",component:r,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{backgroundColor:{control:"color"}},args:{onClick:p()}},a=()=>e.createElement(r,{value:30,label:"Loading..."}),s=()=>e.createElement(e.Fragment,null,e.createElement(r,{value:20,label:"Primary",color:"primary"}),e.createElement(r,{value:40,label:"Success",color:"success"}),e.createElement(r,{value:60,label:"Warning",color:"warning"}),e.createElement(r,{value:80,label:"Error",color:"error"})),o=()=>e.createElement(r,{value:45,label:"Processing...",showPercentage:!1}),t=()=>{const[c,u]=m.useState(0);return m.useEffect(()=>{const l=setInterval(()=>{u(n=>n<100?n+10:100)},500);return()=>clearInterval(l)},[]),e.createElement(r,{value:c,label:"Uploading..."})};a.__docgenInfo={description:"",methods:[],displayName:"Basic"};s.__docgenInfo={description:"",methods:[],displayName:"Colors"};o.__docgenInfo={description:"",methods:[],displayName:"WithoutPercentage"};t.__docgenInfo={description:"",methods:[],displayName:"Animated"};a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:'() => <Progressbar value={30} label="Loading..." />',...a.parameters?.docs?.source}}};s.parameters={...s.parameters,docs:{...s.parameters?.docs,source:{originalSource:`() => <>\r
    <Progressbar value={20} label="Primary" color="primary" />\r
    <Progressbar value={40} label="Success" color="success" />\r
    <Progressbar value={60} label="Warning" color="warning" />\r
    <Progressbar value={80} label="Error" color="error" />\r
  </>`,...s.parameters?.docs?.source}}};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:'() => <Progressbar value={45} label="Processing..." showPercentage={false} />',...o.parameters?.docs?.source}}};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:`() => {
  const [progress, setProgress] = useState(0);
  useEffect(() => {
    const interval = setInterval(() => {
      setProgress(prev => prev < 100 ? prev + 10 : 100);
    }, 500);
    return () => clearInterval(interval);
  }, []);
  return <Progressbar value={progress} label="Uploading..." />;
}`,...t.parameters?.docs?.source}}};const f=["Basic","Colors","WithoutPercentage","Animated"];export{t as Animated,a as Basic,s as Colors,o as WithoutPercentage,f as __namedExportsOrder,v as default};
